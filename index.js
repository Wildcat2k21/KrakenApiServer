import Entities from './modules/Entities.js';
import XUI_API from './modules/XUI_API.js';
import Response from './modules/Response.js';
import Database from './modules/Database.js';
import express from 'express';

const {USER, OFFER, SUB, PROMO} = Entities;

import dotenv from 'dotenv';
dotenv.config();

import {promises as fs} from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–º—É —Ñ–∞–π–ª—É
const __filename = fileURLToPath(import.meta.url);

// –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
const __dirname = path.dirname(__filename);

// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–æ–¥—É–ª–∏
import Time from './modules/Time.js';
import Other from './modules/Other.js';
import BotService from './modules/BotService.js';
import Data from './modules/Data.js';
import TimeShedular from './modules/TimeShedular.js';

const {WriteInLogFile, FormatBytes} = Other;
const {checkUserFields, checkOfferFields, checkConfigFields} = Data;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
let config = null;

//–æ—Å–Ω–æ–≤–∞–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const PORT = process.env.PORT || 4015;
const DATABASE = process.env.DATABASE_NAME;
const ADMIN_ID = process.env.ADMIN_TELEGRAM_ID;

//—ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const db = new Database(`${DATABASE}.db`);
const app = express();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
initConnection();

// –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ: –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—à—â–∏–µ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–∫–∞–∑—ã –≤ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –±—É–¥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É 409 –∏–ª–∏ 404
// –ø—Ä–∏–º–µ—á–µ–Ω–∏–µ: –í –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤, –≤ —Å–ª—É—á–∞–µ –Ω–∞–ª–∏—á–∏—è –∏–ª–∏ –æ—Ç—Å—É—Ç—Å–≤–∏—è –∑–∞–∫–∞–∑–æ–≤ –≤ Marzban –±—É–¥–µ—Ç 409 –∏–ª–∏ 404
// –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∑–∞–∫–∞–∑–µ, –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å–≤–∏—è –∑–∞–∫–∞–∑–∞ –≤ Marzban –±—É–¥–µ—Ç 404
// –î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –Ω–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –µ—Å–ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –±—ã–ª–∞ –∑–∞—Ç—Ä–æ–Ω—É—Ç–∞
// –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–° –º—è–≥–∫–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º)

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—É—â–Ω–æ—Å—Ç–µ–π
const user = new USER(db);
const offer = new OFFER(db);
const sub = new SUB(db);
const promo = new PROMO(db);

// Middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON-—Ç–µ–ª
app.use(express.json());

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const databasePath = path.join(__dirname, 'database.zip');

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
app.get('/database', (req, res) => {
    res.download(databasePath, 'database.zip', (err) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞:', err);
            res.status(500).send('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞');
        }
    });
});

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
app.post('/user', async (req, res) => {

    const response = new Response(res);
    const body = req.body;

    try{
        const totalParticipants = await USER.COUNT();
        if(totalParticipants >= config.total_participants_limit){
            response.status(403, '–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
            return response.send();
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        checkUserFields(body);

        // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await USER.NEW(body);

        //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–æ–≤–æ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏
        if(body.invited_with_code){
            //–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–æ–≤–æ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –ø–æ –∫–æ–¥—É
            const invitedBy = await USER.FIND([[{
                field: 'invite_code',
                exacly: body.invited_with_code
            }]], true);

            //—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await BotService.NOTIFY([{
                id: invitedBy.telegram_id,
                message: `<b>–í–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${body.telegram} ü§ù</b>/n/n
                –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ñ–æ—Ä–º–∏—Ç –ø–ª–∞—Ç–Ω—ã–π –∑–∞–∫–∞–∑, –≤–∞—à–∞ —Å–∫–∏–¥–∫–∞ –≤—ã—Ä–∞—Å—Ç–∏—Ç –Ω–∞ <b>${config.invite_discount}%</b>/n/n
                <b><u>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –µ—â–µ –¥—Ä—É–≥–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ª—é–±—É—é –ø–æ–¥–ø–∏—Å–∫—É –≤ –ø–æ–¥–∞—Ä–æ–∫ –±–µ—Å–ø–ª–∞—Ç–Ω–æ üéÅ</u></b>`
            }]);
        }

        //–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        await BotService.NOTIFY([{
            id: ADMIN_ID,
            message: `–£ –≤–∞—Å –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:/n/n
            üë§ @${body.telegram} ‚Äî "${body.telegram}"/n/n
            üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${(totalParticipants + 1)}`
        }]);

        response.status(201, '–°–æ–∑–¥–∞–Ω–æ')
        response.send();
    }
    catch(err){

        // –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if(err.dataCheck){
            response.status(417, err.message);
            return response.send();
        }

        //–æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–ª–µ–≥—Ä–∞–º —Å–µ—Ä–≤–∏—Å–∞
        if(err.response){
            //—Å—Ç–∞—Ç—É—Å –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
            const statusCode = err.response.statusCode;
            const errorMessage = err.response.data;
            
            WriteInLogFile(new Error(`Telegram service error on "User": ${statusCode} ${errorMessage}`));
            response.status(statusCode, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            return response.send();
        }

        return databaseErrorHandler(err, response).send();
    }
});

// –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
app.post('/offer', async (req, res) => {

    const response = new Response(res);
    const body = req.body;

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    if(!config.accept_new_offers){
        response.status(403, config.new_offers_limis_message);
        return response.send();
    }

    // –ü–æ–¥–ø–∏—Å–∫–∏ –∑–∞–∫–∞–∑—ã –∏ —Ç.–¥
    let offer_promo, offer_user, offer_id,offer_sub, paymentCalc;

    try{
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª—è –∑–∞–∫–∞–∑–∞
        checkOfferFields(body);

        // –ü–æ–∏—Å–∫ —Ç–∞–∫–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
        offer_sub = await SUB.FIND([[{
            field: 'name_id',
            exacly: body.sub_id
        }]], true);

        // –ü–æ–∏—Å–∫ –æ—Ç–º–µ—Ç–∫–∏ –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑
        offer_user = await USER.FIND([[{
            field: 'telegram_id',
            exacly: body.user_id
        }]], true);

        if(!offer_user){
            response.status(404, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω');
            return response.send();
        }

        if(!offer_sub){
            response.status(404, '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–∞');
            return response.send();
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑
        if(body.sub_id === 'free' && offer_user.free_trial_used){
            // –û—Ç–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –Ω–µ –ø–µ—Ä–≤—ã–π
            response.status(403, '–ü—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑');
            return response.send();
        }

        // –ï—Å–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω - –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–æ–º–æ–∫–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if(!body.promo_id){
            offer_promo = await PROMO.FIND([[{
                field: 'name_id',
                exacly: 'default'
            }]], true);
        }
        else {
            //–ø–æ–∏—Å–∫ –ø—Ä–æ–º–æ–∫–æ–¥–∞
            offer_promo = await PROMO.FIND([[{
                field: 'name_id',
                exacly: body.promo_id
            }]], true);

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
            if(!offer_promo){
                response.status(404, `–ü—Ä–æ–º–æ–∫–æ–¥ '${body.promo_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω`);
                return response.send();
            }
        }

        // C–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
        paymentCalc = await calcPriceAndDiscount(offer_user, offer_sub.price, offer_promo.discount);

        // –ü–æ–¥–º–µ–Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞
        body.promo_id = offer_promo.name_id;

        // –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
        body.end_time = new Time().addTime(offer_sub.date_limit).shortUnix();

        // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
        offer_id = await OFFER.NEW({...body, ...paymentCalc});

        // –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
        const offerDetails = await createOfferDetails(offer_id, offer_sub, offer_promo, offer_user);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
        if(config.auto_accept_free_trial && body.sub_id === 'free'){
            //–º–µ—Ç–æ–¥ –∏–º–µ–µ—Ç –≤–Ω—É—Ç—Ä—é—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –∏ –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–ø—Ä–æ—Å–∞
            return await confirmOffer(offerDetails, response);
        }

        //–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ –¥–ª—è –∞–¥–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await BotService.NOTIFY([{
            id: ADMIN_ID,
            message: `–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç: "${offerDetails._user.nickname}" üë§/n
            –ù–∞ –ø–æ–¥–ø–∏—Å–∫—É: "${offerDetails._sub.name_id}"/n
            –¢–µ–ª–µ–≥—Ä–∞–º: @${offerDetails._user.telegram}/n/n
            –ö –æ–ø–ª–∞—Ç–µ: ${offerDetails.toPay} ‚ÇΩ
            `,
            control: {
                action: 'accept offer',
                offer_id
            }
        }]);

        // --- —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ ---

        // –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª–µ–π
        Object.keys(offerDetails).forEach(key => {
            if(key.startsWith('_')) delete offerDetails[key];
        });

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
        response.body = offerDetails;

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
        response.status(201, '–°–æ–∑–¥–∞–Ω–æ');
        response.send();

    }
    catch(err){
        //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ç–µ–ª–µ–≥—Ä–∞–º —Å–µ—Ä–≤–∏—Å–∞
        if(err.response){
            //—Å—Ç–∞—Ç—É—Å –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–ª–µ–≥—Ä–∞–º —Å–µ—Ä–≤–∏—Å–∞
            const statusCode = err.response.statusCode;
            const message = err.response.data;

            WriteInLogFile(new Error(`Telegram service error on "Offer": ${statusCode} ${message}`));
            response.status(statusCode, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            return response.send();
        }

        return databaseErrorHandler(err, response).send();
    }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ
app.get('/offer', async (req, res) => {

    const response = new Response(res);
    const telegram_id = Number(req.query.telegram_id);

    console.log(123);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if(typeof telegram_id !== 'number' || isNaN(telegram_id)){
        response.status(417, '–ù–µ –ø–µ—Ä–µ–¥–∞–Ω telegram_id');
        return response.send();
    }

    try{
        // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞
        const lastOffer = await OFFER.FIND([[{
            field: 'user_id',
            exacly: telegram_id
        }]], true, {byField: 'offer_id', decrease: true})

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞—è–≤–æ–∫
        if(!lastOffer || (!lastOffer.conn_string && lastOffer.sub_id === 'free')){
            response.status(404, '–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return response.send();
        }

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∞—Ä–∏—Ñ–µ
        const offerSub = await SUB.FIND([[{
            field: 'name_id',
            exacly: lastOffer.sub_id
        }]], true);
        
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ
        const wairingoffer = {
            offerId: lastOffer.offer_id,
            subName: offerSub.title,
            subDataGBLimit: offerSub.data_limit,
            subDateLimit: offerSub.date_limit
        };

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∫–∞–∫–∞–∑–∞ –∫–∞–∫ "–û–∂–∏–¥–∞—é—â–∏–π"
        if(!lastOffer.conn_string){
            response.body = wairingoffer;
            return response.send();
        }

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        const user = await USER.FIND([[{
            field: 'telegram_id',
            exacly: telegram_id
        }]], true);

        // –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const username = `${lastOffer.sub_id}_${lastOffer.offer_id}`;

        console.log(444);

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ –≤ —Å–∏—Å—Ç–µ–º–µ Marzban
        const dataResult = await XUI_API.GetUser(username)
        const marzbanInfo = dataResult[0];

        console.log(dataResult);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        if(!marzbanInfo){
            return response.status(404, '–ó–∞—è–≤–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞').send();
        }

        // –†–∞—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è —Ç—Ä–∞—Ñ–∏–∫–∞
        const data_limit = !marzbanInfo.data_limit ? null : marzbanInfo.data_limit - marzbanInfo.used_traffic;

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ñ–ª–∞–≥–∞ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏
        const isExpired = (marzbanInfo.expire <= new Time().shortUnix() || (data_limit && data_limit <= 1024)) ? true : false;

        //—Å–∫–∏–¥–∫–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –æ–ø–ª–∞—Ç—É
        const nextPayDiscVal = user.invite_count * config.invite_discount;

        //–ø—Ä–∞–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏
        const convPayDiscVal = nextPayDiscVal > 100 ? 100 : nextPayDiscVal;

        //—Ä–∞–∑–Ω–∏—Ü–∞ –ª–∏–º–∏—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —Ç—Ä–∞—Ñ–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const limitDiffrence = (marzbanInfo.data_limit - offerSub.data_limit * 1024**3) ? true : false;

        //—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        response.body = {
            subName: offerSub.title,
            usedTraffic: marzbanInfo.used_traffic,
            dataLimit: marzbanInfo.data_limit,
            subDataGBLimit: offerSub.data_limit,
            subDateLimit: marzbanInfo.expire,
            createdDate: lastOffer.created_date,
            inviteCode: user.invite_code,
            userInviteCount: user.invite_count,
            nextPayDiscount: convPayDiscVal,
            price: offerSub.price,
            connString: marzbanInfo.connection_string,
            limitDiffrence,
            isExpired
        };

        console.log(666);
        response.send();

    }
    catch(err){
        // –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, 4xx –∏–ª–∏ 5xx)
        if (err.response) {
            WriteInLogFile(new Error(`Marzban response on "Get Offer": 
            ${err.response.status} ${err.response.statusText}`.format()));
            response.status(500, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            return response.send();
        } 
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        else if(err.message && err.message.indexOf('SQLITE') !== -1){
            return databaseErrorHandler(err, response).send();
        }
        else {
            const errorMessage = err.message || '–°–µ—Ä–≤–µ—Ä Marzban –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç';
            WriteInLogFile(new Error(`Marzban sending response error on "Get Offer": ${errorMessage}`));
            response.status(500, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            return response.send();
        }
    }
});

// –û–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
app.patch('/confirm', async (req, res) => {

    const response = new Response(res);
    const {offer_id, status} = req.body;

    if(!offer_id){
        response.status(417, '–ù–µ –ø–µ—Ä–µ–¥–∞–Ω –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞');
        return response.send();
    }

    try{
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
        const offerInfo = await OFFER.FIND([[{
            field: 'offer_id',
            exacly: offer_id
        }]], true);

        //–µ—Å–ª–∏ –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω, —Ç–æ —É–¥–∞–ª–∏—Ç—å
        if(status === 'rejected'){
            
            //—É–¥–∞–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
            await OFFER.DELETE(offer_id);

            //–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await BotService.NOTIFY([
            {
                id: ADMIN_ID,
                message: `–ó–∞—è–≤–∫–∞ ‚Ññ${offer_id} –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ ‚ÑπÔ∏è`,
            },{
                id: offerInfo.user_id,
                message: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é üîÇ'
            }]);

            response.status(200, '–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞');
            return response.send();
        }

        // –ï—Å–ª–∏ —Ç–∞–∫–æ–π –∑–∞—è–≤–∫–∏ –Ω–µ—Ç
        if(!offerInfo){
            response.status(404, `–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–∞`);
            return response.send();
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Ä–∞–Ω–µ–µ
        if(offerInfo.conn_string){
            response.status(409, '–ó–∞—è–≤–∫–∞ —É–∂–µ –æ–¥–æ–±—Ä–µ–Ω–∞');
            return response.send();
        }

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–∫–∞–∑–µ
        const offerDetails = await createOfferDetails(offerInfo);

        //–¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∏–¥–∫–∏ –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –ø–æ –∏–Ω–≤–∞–π—Ç—É, –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–æ —ç—Ç–æ–≥–æ –∑–∞–∫–∞–∑–æ–≤ (–≤–∫–ª –±–µ—Å–ø–ª–∞—Ç–Ω—É—é)
        offerDetails._paidOffer = await OFFER.FIND([[{
            field: 'user_id',
            exacly: offerDetails._user.telegram_id
        }, {
            field: 'conn_string',
            isNull: false
        }, {
            field: 'sub_id',
            nonEqual: 'free'
        }]], true);

        //–ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –∫–∏–Ω—É–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        if(offerDetails._user.invited_with_code){
            offerDetails._invitedBy = await USER.FIND([[{
                field: 'invite_code',
                exacly: offerDetails._user.invited_with_code
            }]], true);
        }

        // –ú–µ—Ç–æ–¥ –∏–º–µ–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω—é—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
        await confirmOffer(offerDetails, response);
    }
    catch(err){

        //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ç–µ–ª–µ–≥—Ä–∞–º —Å–µ—Ä–≤–∏—Å–∞
        if(err.response){
            const statusCode = err.response.status;
            const errorMessage = err.response.data;

            WriteInLogFile(new Error(`Telegram response error on "Confirm Offer": ${statusCode} ${errorMessage}`));
            response.status(statusCode, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            return response.send();
        }

        return databaseErrorHandler(err, response).send();
    }
});

//–∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
app.post('/config', async (req, res) => {
    const response = new Response(res);

    try {
        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –ø–æ–ª–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        checkConfigFields(req.body);
        
        await fs.writeFile('./config.json', JSON.stringify(req.body, null, 2));

        //–∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞
        config = req.body;
        response.send();
    }
    catch(err){

        //–æ—à–∏–±–∫–∞ –≤—ã–∑–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–æ–π check
        if(err.dataCheck){
            return response.status(417, err.message).send();;
        }

        WriteInLogFile(err);

        // –ü–ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if (err.message) {
            response.status(417).send(err.message);
        }
        else {
            response.status(500).send('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
        }
    }
});

//–ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
app.get('/config', (req, res) => {
    const response = new Response(res);
    response.body = config;
    response.send();
});

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
app.post('/stop', (req, res) => {
    const response = new Response(res);

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
    response.send();

    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
    server.close(() => {
        WriteInLogFile('Server stopped');
        process.exit(0);
    });
})

//–æ—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ 
app.patch('/logs', async (req, res) => {
    const response = new Response(res);

    try {
        await fs.writeFile('logs.txt', ''); // –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª –ª–æ–≥–æ–≤
        response.status(200).send('ok');
    }
    catch (err) {
        WriteInLogFile(err);
        response.status(500).send('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª –ª–æ–≥–æ–≤');
    }
});

//–æ—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–æ–≤
app.get('/logs', async (req, res) => {
    const response = new Response(res);

    try{
        const logs = await fs.readFile('logs.txt', 'utf-8');
        response.status(200).send(logs);
    }
    catch(err){
        WriteInLogFile(err);
        response.status(500).send('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ');
    }
});

// –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º
app.get('/data', async (req, res) => {

    const response = new Response(res);

    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
    let {tableName, condition, desc, telegram_id} = req.query;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if(!tableName){
        response.status(417, `–ù–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã`);
        return response.send();
    }

    try{
        const dbData =  await db.find(tableName, condition, false, desc);
        if(dbData.length && tableName === 'sub' && telegram_id){
            for(let item of dbData){
                //–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const currentUser = await USER.FIND([[{
                    field: 'telegram_id',
                    exacly: telegram_id
                }]], true);

                const payInfo = await calcPriceAndDiscount(currentUser, item.price, 0);
                item.discount = payInfo.discount;
                item.price = payInfo.payment;
            }
        }

        response.body = dbData;
        response.send();

    }
    catch(err){
        return databaseErrorHandler(err, response).send();
    }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
app.patch('/update', async (req, res) => {

    const response = new Response(res);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    let {tableName, update, condition} = req.body;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if(!tableName){
        response.status(417, `–ù–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã`);
        return response.send();
    }

    try{
        await db.update(tableName, update, condition);
        response.send();

    }
    catch(err){
        return databaseErrorHandler(err, response).send();
    }
})

// –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫ (–≤ —Å–ª—É—á–∞–µ —Å–±–æ—è –∏–ª–∏ –ø–æ –∏–Ω—ã–º –ø—Ä–∏—á–∏–Ω–∞–º)
// –£–°–¢–ê–ù–û–í–ò–¢–¨ –í –î–ê–õ–¨–ù–ï–ô–®–ï–ú –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï –ù–ê –û–ë–†–ê–©–ï–ù–ò–ï –†–ê–ó –í 1 –î–ï–ù–¨
app.patch('/recreate', async (req, res) => {

    const response = new Response(res);
    const {users, notify} = req.body;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if(!(users instanceof Array) || !users.length){
        response.status(417, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω—ã`);
        return response.send();
    }

    const usersOffers = [];
    const dateTimeNow = new Time().shortUnix();

    try{
        // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤
        for(let i = 0; i < users.length; i++){

            const offerForUser = await OFFER.FIND([[{
                field: 'user_id',
                exacly: users[i]
            }, {
                field: 'end_time',
                more: dateTimeNow
            }]], true, {byField: 'offer_id', decrease: true})
            
            // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–µ
            if(offerForUser && offerForUser.conn_string){
                const offerSub = await SUB.FIND([[{
                    field: 'name_id',
                    exacly: offerForUser.sub_id
                }]], true);

                offerForUser.data_limit = offerSub.data_limit;
                usersOffers.push(offerForUser);
            }
        }

        // –ò–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if(!usersOffers.length){
            response.status(404, '–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return response.send();
        }

        //–ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫ –≤ Marzban
        for(let i = 0; i < usersOffers.length; i++){

            //–Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏: '—Ç–∞—Ä–∏—Ñ_–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä'
            const username = `${usersOffers[i].sub_id}_${usersOffers[i].offer_id}`;

            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ –≤ —Å–∏—Å—Ç–µ–º–µ Marzban
            const dataResult = await XUI_API.GetUser(username)
            const userMarzbanData = dataResult[0];

            // –ò–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞—è–≤–æ–∫
            if(!userMarzbanData){
                response.status(404, '–ó–∞—è–≤–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                return response.send();
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–¥–ø–∏—Å–∫–∏
            if(userMarzbanData.expire <= new Time().shortUnix()){
                response.status(403, '‚ÑπÔ∏è –°—Ä–æ–∫ –ø–æ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫. –û—Ñ–æ—Ä–º–∏—Ç–µ –Ω–æ–≤—É—é –≤ "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞"');
                return response.send();
            }

            //—Ä–∞—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è —Ç—Ä–∞—Ñ–∏–∫–∞
            const data_limit = !userMarzbanData.data_limit ? null : userMarzbanData.data_limit - userMarzbanData.used_traffic;

            //–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞
            if(data_limit && data_limit <= 1024){
                response.status(403, '‚ÑπÔ∏è –£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª—Å—è —Ç—Ä–∞—Ñ–∏–∫ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ. –û—Ñ–æ—Ä–º–∏—Ç–µ –Ω–æ–≤—É—é –≤ "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞"');
                return response.send();
            }

            const expire = usersOffers[i].end_time;

            // –£–¥–∞–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞—è–≤–∫–∏
            await XUI_API.DeleteUser(username);

            // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–≤–æ–π –∑–∞—è–≤–∫–∏ —Å —Ç–µ–º –∂–µ –∏–º–µ–Ω–µ–º
            const requestData = await XUI_API.CreateUser({email: username, totalGB: data_limit, expiryTime: expire * 1000});

            if(notify){
                // –¢—É—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await BotService.NOTIFY([
                    {
                        id: usersOffers[i].user_id,
                        message: `–í–∞—à QR-–∫–æ–¥ –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω —Å–∏—Å—Ç–µ–º–æ–π ‚ÑπÔ∏è/n/n
                        –û—Ç–∫—Ä–æ–π—Ç–µ –æ–ø—Ü–∏—é "–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞", —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
                        `,
                        withDefaultOptions: true
                    }
                ]);
            }

            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ –∑–∞–∫–∞–∑–µ
            await OFFER.UPDATE(usersOffers[i].offer_id, {conn_string:  requestData.connection_string});
        }

        response.status(200, `–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–æ –∑–∞—è–≤–æ–∫: ${usersOffers.length}`);
        response.send();

    }
    catch(err){
        // –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, 4xx –∏–ª–∏ 5xx)
        if (err.response) {
            WriteInLogFile(new Error(`Marzban response Or telegram error on "Reacreate": 
            ${err.response.status} ${err.response.statusText}`.format()));
            response.status(500, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            return response.send();
        } 
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        else if(err.message && err.message.indexOf('SQLITE') !== -1){
            return databaseErrorHandler(err, response).send();
        }
        // –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏
        else {
            const errorMessage = err.message || '–°–µ—Ä–≤–µ—Ä Marzban –∏–ª–∏ Telegram –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç';
            WriteInLogFile(new Error(`Marzban sending or telegram response error on "Reacreate": ${errorMessage}`));
            response.status(500, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            return response.send();
        }
    }
});

// –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–ö—Ä–∞–π–Ω–µ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å)
app.delete('/delete', async (req, res) => {
    const response = new Response(res);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    let {tableName, condition} = req.body;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if(!tableName){
        response.status(417, `–ù–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã`);
        return response.send();
    }

    try{
        await db.delete(tableName, condition);
        response.send();

    }
    catch(err){
        return databaseErrorHandler(err, response).send();
    }
});

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function createOfferDetails(offerOrId, sub, promo, user){

    let offerDbData, subDbData, promoDbData, userDbData;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è offer
    if(typeof offerOrId === 'number'){
        offerDbData = await OFFER.FIND([[{
            field: 'offer_id',
            exacly: offerOrId
        }]], true);
    }
    
    // –°—Ç—Ä–∞—è –¥–æ–±—Ä–∞—è –¥–µ–¥–æ–≤—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if(!sub){
        subDbData = await SUB.FIND([[{
            field: 'name_id',
            exacly: offerOrId.sub_id
        }]], true);
    }
    
    // –°—Ç—Ä–∞—è –¥–æ–±—Ä–∞—è –¥–µ–¥–æ–≤—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if(!promo){
        promoDbData = await PROMO.FIND([[{
            field: 'name_id',
            exacly: offerOrId.promo_id
        }]], true);
    }
    
    // –°—Ç—Ä–∞—è –¥–æ–±—Ä–∞—è –¥–µ–¥–æ–≤—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if(!user){
        userDbData = await USER.FIND([[{
            field: 'telegram_id',
            exacly: offerOrId.user_id
        }]], true);
    }

    // –í–æ–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
    const subData = subDbData || sub;
    const promoData = promoDbData || promo;
    const userData = userDbData || user;
    const offerData = offerDbData || offerOrId;

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const offerDetails = {
        subname: subData.title,
        price: subData.price,
        toPay: offerData.payment,
        discount: offerData.discount,
        promoName: promoData.title,
        inviteCount: userData.invite_count,
        offerId: offerData.offer_id,
        _offer: offerData,
        _sub: subData,
        _user: userData
    }
    
    return offerDetails;
}

async function calcPriceAndDiscount(offer_user, subPrice, promoDiscount){

    //–¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∏–¥–∫–∏ –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –ø–æ –∏–Ω–≤–∞–π—Ç—É, –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–æ —ç—Ç–æ–≥–æ –∑–∞–∫–∞–∑–æ–≤ (–≤–∫–ª –±–µ—Å–ø–ª–∞—Ç–Ω—É—é)
    const paidOffer = await OFFER.FIND([[{
        field: 'user_id',
        exacly: offer_user.telegram_id
    }, {
        field: 'conn_string',
        isNull: false
    }, {
        field: 'sub_id',
        nonEqual: 'free'
    }]], true);

    let invited_by = null;

    //–ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –∫–∏–Ω—É–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
    if(offer_user.invited_with_code){
        invited_by = await USER.FIND([[{
            field: 'invite_code',
            exacly: offer_user.invited_with_code
        }]], true);
    }

    // —Å—Ç–∞—Ç–∏—á–Ω–∞—è —Å–∫–∏–¥–∫–∞ 25 % —É–±–∞—Ä–∞–Ω–∞
    // –û—Ç–∫–ª—é—á–µ–Ω–∞ —Å–∫–∏–¥–∫–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∞
    const discSum = (promoDiscount + config.invite_discount * offer_user.invite_count + ((!paidOffer && invited_by) ? config.for_invited_discount : 0)) / 100;
    const priceToPay = Math.ceil(subPrice * (1 - discSum));

    // –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π —Ü–µ–Ω—ã
    const payment = (priceToPay < 0) ? 0 : priceToPay;

    // –°–∫–∏–¥–∫–∞
    const discount = (subPrice) ? Math.ceil((subPrice - payment) / subPrice * 100) : 0;
    return {payment, discount};
}

async function confirmOffer(offerInfo, response){

    try{
        // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–º–µ–Ω–∞ –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞
        const username = `${offerInfo._sub.name_id}_${offerInfo._offer.offer_id}`;

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
        const expire = offerInfo._offer.end_time;

        // –õ–∏–º–∏—Ç –¥–∞–Ω–Ω—ã—Ö
        const data_limit = offerInfo._sub.data_limit * 1024**3;

        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –æ–±—Ö–æ–¥ –º–µ—Ç–æ–¥–æ–≤ —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–µ–π –∑–∞–∫–∞–∑–æ–≤
        const oldOffer = await OFFER.FIND([[{
            field: 'offer_id',
            less: offerInfo._offer.offer_id
        },{
            field: 'user_id',
            exacly: offerInfo._user.telegram_id
        },{
            field: 'conn_string',
            isNull: false
        }]], true, {
            byField: 'offer_id',
            decrease: true
        });

        // –ï—Å–ª–∏ –∑–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω, —Ç–æ —É–¥–æ–ª—è–µ–º –µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º–µ Marzban
        if(oldOffer){
            const oldOfferName = `${oldOffer.sub_id}_${oldOffer.offer_id}`;

            // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–° –º—è–≥–∫–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º)
            await XUI_API.DeleteUser(oldOfferName);
            await OFFER.DELETE(oldOffer.offer_id);
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const requestData = await XUI_API.CreateUser({email: username, totalGB: data_limit, expiryTime: expire * 1000});

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–º–µ—Ç–∫–∞ —á—Ç–æ –±—ã–ª –∑–∞–∫–∞–∑
        await OFFER.UPDATE(offerInfo._offer.offer_id, {conn_string: requestData.connection_string});
        
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let userUpdateOptions;
        
        // –ï—Å–ª–∏ –∑–∞–∫–∞–∑ –±—ã–ª –ø–µ—Ä–≤—ã–π - –æ—Ç–º–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏–π –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
        if(!offerInfo._user.free_trial_used) userUpdateOptions = {free_trial_used: 1};

        // –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–æ–≤—ã–º –∑–∞–∫–∞–∑–µ
        if(offerInfo._user.invite_count){
            userUpdateOptions = {...userUpdateOptions, invite_count: 0};
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if(userUpdateOptions) await USER.UPDATE(offerInfo._user.telegram_id, userUpdateOptions);

        //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        const notifyUsers = [{
            id: ADMIN_ID,
            message: `–û–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∑–∞—è–≤–∫–∞ ‚Ññ${offerInfo._offer.offer_id} ‚ÑπÔ∏è/n/n
            üë§ @${offerInfo._user.telegram} ‚Äî "${offerInfo._user.nickname}"/n/n
            üì∂ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞: "${offerInfo._sub.title}."/n/n
            –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ–¥—Ä–æ–±–Ω–µ–µ –º–æ–∂–Ω–æ –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏
            `
        }]

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –ø–ª–∞—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
        if(offerInfo._offer.sub_id !== 'free' && !offerInfo._paidOffer && offerInfo._invitedBy) {      
            await USER.INCREMENT_INVITE_COUNTER(offerInfo._invitedBy.telegram_id);

            //–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω, –∫–µ–º-—Ç–æ —É–≤–µ–¥–æ–º–∏—Ç—å –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∫–∏–¥–∫–∏
            notifyUsers.push({
                id: offerInfo._invitedBy.telegram_id,
                message: `<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${offerInfo._user.nickname} –æ—Ñ–æ—Ä–º–∏–ª –ø–ª–∞—Ç–Ω—ã–π –∑–∞–∫–∞–∑ üî•</b>/n/n
                ü™Ñ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É <b>${config.invite_discount}%</b>/n
                ü§ù –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π ‚Äî <b>${offerInfo._invitedBy.invite_count + 1}</b>/n/n
                 <b><u>–í–∞—à–∞ —Å–∫–∏–¥–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–∫–∞–∑ üéÅ</u></b>
                `
            });
        }

        // –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è, —É–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∏–¥–∫–µ –∏ –∫ –æ–ø–ª–∞—Ç–µ
        if(offerInfo._offer.sub_id === 'free'){
            delete offerInfo.discount;
            delete offerInfo.price;
            delete offerInfo.inviteCount;
        }
        //—É–≤–µ–¥–æ–º–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –æ –ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∞—Ö (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è)
        else {
            notifyUsers.push({
                id: offerInfo._user.telegram_id,
                message: `–ó–∞—è–≤–∫–∞ <b>"${offerInfo._sub.title}"</b> –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ ‚úîÔ∏è/n/n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –æ–ø—Ü–∏—é <b>"–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞"</b>, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è üëá`,
                withDefaultOptions: true
            });
        }
        
        //–æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        await BotService.NOTIFY(notifyUsers)

        // –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª–µ–π
        Object.keys(offerInfo).forEach(key => {
            if(key.startsWith('_')) delete offerInfo[key];
        });

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
        response.status(200, '–û–±–Ω–æ–≤–ª–µ–Ω–æ');
        response.body = {...offerInfo, connection: requestData.connection_string};
        return response.send();
    }
    catch(err){
        // –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, 4xx –∏–ª–∏ 5xx)
        if (err.response) {
            const error = new Error(`Marzban OR telegram response on "Confirm": 
            ${err.response.status} ${err.response.statusText}`.format());
            WriteInLogFile(error);
            response.status(500, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            return response.send();
        } 
        //–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        else if(err.message && err.message.indexOf('SQLITE') !== -1){
            return databaseErrorHandler(err, response).send();
        }
        //–æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏
        else {
            err.message = err.message || '–°–µ—Ä–≤–µ—Ä Marzban –∏–ª–∏ Telegram –≤ "Confirm" –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç';
            const error = new Error(err.message);
            WriteInLogFile(error);
            response.status(500, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            return response.send();
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
async function initConnection(){ 
    try{
        await db.connect(`${DATABASE}.db`, 'init.sql');
    }
    catch(err){
        WriteInLogFile(err);
        throw err;
    }
}

function databaseErrorHandler(err, response){

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    if(err.message.indexOf('SQLITE_CONSTRAINT') !== -1){
        response.status(409, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
    }
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    else if (err.message.indexOf('SQLITE_ERROR') !== -1){
        response.status(417, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
    }
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
    else {
        response.status(500, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
    }

    WriteInLogFile(err);
    return response;
}

async function initTasks(){

    //–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–∫–∞–∂–¥—ã–µ 14 –¥–Ω–µ–π)
    TimeShedular.NewTask('notification', 1209600000, async () => {

        //–ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
        const users = await USER.FIND();

        const messageForUsers = users.map(user => {
            return {
                id : user.telegram_id,
                message: `<b>${user.nickname}, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–º–æ—á—å –ø—Ä–æ–µ–∫—Ç—É, —Å–¥–µ–ª–∞–≤ –µ–≥–æ –ª—É—á—à–µ –∏ –¥–µ—à–µ–≤–ª–µ ü§ù</b>/n/n
                –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –ø—Ä–∏—Ö–æ–¥–∏—Ç—å—Å—è —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤—ã—Å–æ–∫–∏–π —Å–µ—Ä–≤–∏—Å, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å. 
                –ü—Ä–∏–æ–±—Ä–µ—Ç–∞—è –ø–ª–∞—Ç–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –∏ –ø—Ä–∏–≥–ª–∞—à–∞—è –¥—Ä—É–∑–µ–π, –≤—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ –Ω–∞–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –Ω–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã, –∏ –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ./n/n
                <b>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –ø–æ —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–µ –≤ "–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞", –∏ –ø–æ–ª—É—á–∏—Ç–µ –≤ –∑–Ω–∞–∫ –Ω–∞—à–µ–π –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –ª—é–±—É—é –ø–æ–¥–ø–∏—Å–∫—É –≤ –ø–æ–¥–∞—Ä–æ–∫ üéÅ</b>/n/n
                –í—Å—Ç—É–ø–∞–π—Ç–µ —Ç–∞–∫–∂–µ –∫ –Ω–∞–º –≤ –≥—Ä—É–ø–ø—É <a href="https://t.me/lightvpn_test">Kraken Team Project</a>, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –Ω–∞—à–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Ä–µ–ª–∏–∑–æ–≤./n/n
                <b>–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ Kraken Team üî±</b>`
            }
        })

        //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–± –∞–∫—Ü–∏–∏ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        if(messageForUsers.length){
            await BotService.NOTIFY(messageForUsers);
        }
    });

    //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ (–∫–∞–∂–¥—ã–µ 24 —á–∞—Å–æ–≤)
    TimeShedular.NewTask('offer ending', 86400000, async () => {

        //–ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
        const offers = await OFFER.FIND([[
            {
                field: 'conn_string',
                isNull: false
            }
        ]]);

        //–≤—ã–±–æ—Ä –∑–∞–∫–∞–∑–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –∏—Å—Ç–µ–∫–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∞
        const untilTime = 432000, untilData = 3 * 1024**3, usersToNotify = [];

        for(let offer of offers){

            //—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
            const timeNow = new Time().shortUnix(); //2500000

            //–µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å—Å—è–∫–ª–∞, –ø—Ä–∏—Å–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if(timeNow >= offer.end_time){
                usersToNotify.push({
                    id: offer.user_id,
                    message: `–°—Ä–æ–∫ –ø–æ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–¥–æ—à–µ–ª –∫ –∫–æ–Ω—Ü—É. –û—Ñ—Ä–º–∏—Ç–µ –Ω–æ–≤—É—é, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å üîÇ`
                });

                continue
            }

            //–µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è, –ø—Ä–∏—Å–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if(timeNow + untilTime >= offer.end_time){
                usersToNotify.push({
                    id: offer.user_id,
                    message: `–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É/n/nüìÖ ${new Time(offer.end_time).toFriendlyString()}/n/n
                    <b>–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –Ω–æ–≤—É—é, –ø–µ—Ä–µ–¥ –µ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ–º üîÇ</b>
                    `
                })

                continue
            }

            // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Marzban
            const username = offer.sub_id + '_' + offer.offer_id;
                
            // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–≤–æ–∞—Ç–µ–ª—è Marzban
            const dataResult = await XUI_API.GetUser(username);
            const marzbanUser = dataResult[0];

            if(!marzbanUser) continue;

            //—Ä–∞—Å—á–µ—Ç —Ç—Ä–∞—Ñ–∏–∫–∞
            const traffic_balance = !marzbanUser.data_limit ? null : marzbanUser.data_limit - marzbanUser.used_traffic;

            // –ï—Å–ª–∏ —Ç—Ä–∞—Ñ–∏–∫ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ –∏—Å—Ç–µ–∫
            if(traffic_balance && traffic_balance <= 1024){
                usersToNotify.push({
                    id: offer.user_id,
                    message: '–¢—Ä–∞—Ñ–∏–∫ –ø–æ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–¥–æ—à–µ–ª –∫ –∫–æ–Ω—Ü—É. –û—Ñ—Ä–º–∏—Ç–µ –Ω–æ–≤—É—é, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å üîÇ'
                })

                continue
            }

            //–µ—Å–ª–∏ —Ç—Ä–∞—Ñ–∏–∫ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É
            if(marzbanUser.data_limit && traffic_balance <= untilData){
                usersToNotify.push({
                    id: offer.user_id,
                    message: `–¢—Ä–∞—Ñ–∏–∫ –ø–æ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É/n/n
                    üì∂ –û—Å—Ç–∞–ª–æ—Å—å: ${FormatBytes(traffic_balance)}/n/n
                    <b>–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –Ω–æ–≤—É—é, –ø–µ—Ä–µ–¥ –æ–∫–æ–Ω—á–∞–Ω–∏–µ–º üîÇ</b>
                    `
                });

                continue
            }
        }

        //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        if(usersToNotify.length){
            await BotService.NOTIFY(usersToNotify);
        }
    });

    //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º (–∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é)
    TimeShedular.NewTask('connection trouble', 604800000, async () => {

        //–ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
        const activeOffers = await OFFER.FIND([[{
            field : 'conn_string',
            isNull: false
        },{
            field : 'end_time',
            exaclyMore: new Time().shortUnix()
        }]]);

        const usersToNotify = [];

        //–ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç—Ä–∞—Ñ–∏–∫—É –≤ Marzban –∏ —Ä–∞—Å—Å—ã–ª–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        for(let i = 0; i < activeOffers.length; i++){

            //–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Marzban
            const username = `${activeOffers[i].sub_id}_${activeOffers[i].offer_id}`;

            //–ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç—Ä–∞—Ñ–∏–∫—É
            const dataResult = await XUI_API.GetUser(username);
            const userInMarzban = dataResult[0];

            if(!userInMarzban) continue;

            //–ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞
            if(userInMarzban.used_traffic === 0){
                usersToNotify.push({
                    id: activeOffers[i].user_id,
                    control: {
                        action: 'instruction'
                    },
                    message: `
                        <b>‚ùì –ú—ã –∑–∞–º–µ—Ç–∏–ª–∏ —É –≤–∞—Å —Ä–∞–±–æ—á—É—é –ø–æ–¥–ø–∏—Å–∫—É, –∫ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ç–∞–∫ –∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å</b>/n/n
                        –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ä–æ—Ç–∫—É—é –≤–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, –∫–∞–∫–æ–µ —É –≤–∞—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ?
                    `,
                    sticker: 'CAACAgIAAxkBAAILcmb3bNBeO9K9SoPnnzGVfXXrkexPAAIFDgAC7QOxStTbeV9QVl0HNgQ'
                })
            }
        }

        //—Ä–∞—Å—Å—ã–ª–∫–∞ —Ä–ø–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        if(usersToNotify.length){
            await BotService.NOTIFY(usersToNotify);
        }
    });

    //—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–ª–∞–∫–∞—Ü–∏–∏ –≤ –Ω–∏–¥–µ—Ä–ª–∞–Ω–¥—ã (–∫–∞–∂–¥—ã–µ 2 –Ω–µ–¥–µ–ª–∏)
    TimeShedular.NewTask('releases', 1209600000, async () => {
        const usersToNotify = await USER.FIND();
        const notifyMessages = usersToNotify.map(user => {
            return {
                id: user.telegram_id,
                withDefaultOptions: true,
                message: `<b>–ú—ã –ø–µ—Ä–µ–µ—Ö–∞–ª–∏ –≤ –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã üéâüéâüéâ</b>/n/n
                <b>–ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç ‚ùì</b>/n/n
                ‚úîÔ∏è –¢–æ—Ä—Ä–µ–Ω—Ç—ã –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏/n
                üçø –ë–æ–ª—å—à–µ –ø–∏—Ä–∞—Ç—Å–∫–∏—Ö —Å–∞–π—Ç–æ–≤ –∏ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤/n
                üè¥‚Äç‚ò†Ô∏è –î–æ—Å—Ç—É–ø–µ–Ω Rutracker, Torrents, KickAssTorrent/n
                üí¨ –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ –Æ—Ç—é–± ? –ù–µ –Ω–µ —Å–ª—ã—à–∞–ª–∏/n
                üíª –ù–µ–π—Ä–æ—Å–µ—Ç–∏ ChatGPT, BingAI, DELLEE/n
                üçì –°–∞–π—Ç—ã —Å –∫–ª—É–±–Ω–∏—á–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã/n/n
                –ï—Å–ª–∏ –≤—ã –µ—â–µ –Ω–µ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é "–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è" –Ω–∏–∂–µ/n/n<b>
                üíØ –í—Å—Ç—É–ø–∞–π—Ç–µ –∫ –Ω–∞–º –≤ –≥—Ä—É–ø–ø–µ <a href='https://t.me/kraken_team_project'>Kraken Team Project üî±</a>, –∏ —É—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø–æ–¥–ø–∏—Å–æ–∫ üéÅ/n/n</b>
                `
            }
        });

        //—Ä–∞—Å—Å—ã–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        await BotService.NOTIFY(notifyMessages);
    });
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç—É
app.listen(PORT, '0.0.0.0', async () => {

    //–æ—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏
    console.clear();

    config = JSON.parse(await fs.readFile(new URL('./config.json', import.meta.url)));

    //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è XUI API
    await XUI_API.InitXrayConfig();

    initTasks(); 
    WriteInLogFile(`–°–µ—Ä–≤–µ—Ä –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è –Ω–∞ http://localhost:${PORT} üëÇ`);
});